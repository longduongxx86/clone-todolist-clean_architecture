basePath: /
definitions:
  todomodel.ToDoItem:
    description: User account information with user id and username
    properties:
      id:
        type: string
      is_show:
        type: boolean
      status:
        type: boolean
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: longduongxx86@gmail.com
    name: DuongBaoLong
  description: Todolist API using Swaggo
  title: Todolist
  version: "1.0"
paths:
  /todos:
    get:
      consumes:
      - application/json
      description: gel all  todo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/todomodel.ToDoItem'
            type: array
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: create  todo
      parameters:
      - description: newTodo
        in: body
        name: dataItem
        required: true
        schema:
          $ref: '#/definitions/todomodel.ToDoItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/todomodel.ToDoItem'
      tags:
      - todos
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: delete a todo
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: Get a todo
      parameters:
      - description: id
        in: query
        maxLength: 100
        minLength: 8
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/todomodel.ToDoItem'
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: update  todo
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: updateTodo
        in: body
        name: dataItem
        required: true
        schema:
          $ref: '#/definitions/todomodel.ToDoItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/todomodel.ToDoItem'
      tags:
      - todos
swagger: "2.0"
